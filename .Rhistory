#### global variable
## W_arm1_stage1, W_arm2_stage1, W_arm1_stage2, W_arm2_stage2
# covariance matrix
Sigma <- matrix(c(
1, 0.5, 1/sqrt(2), 1/(2*sqrt(2)),
0.5, 1, 1/(2*sqrt(2)), 1/sqrt(2),
1/sqrt(2), 1/(2*sqrt(2)), 1, 0.5,
1/(2*sqrt(2)), 1/sqrt(2), 0.5, 1
), nrow = 4, byrow = TRUE)
#
#
################## Section 6.2 ----- FWER calculation ##########################
# mean vector under null hypothesis
vec_mean_H0 <- c(rep(0, 4))
## Type I error at stage 1
FWER_1 <- 1 - pmvnorm(
upper = c(2.87, 2.87),
mean = vec_mean_H0[1:2],
sigma = Sigma[1:2, 1:2]
)
#
## Type I error at stage 2
FWER_2 <- pmvnorm(
lower = c(0, 0),
upper = c(2.87, 2.87),
mean = vec_mean_H0[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, 0, -Inf, -Inf),
upper = c(2.87, 2.87, 1.95, 1.95),
mean = vec_mean_H0,
sigma = Sigma
)
FWER_2
#
FWER_3 <- pmvnorm(
lower = c(-Inf, 0),
upper = c(0, 2.87),
mean = vec_mean_H0[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(-Inf, 0, -Inf, -Inf),
upper = c(0, 2.87, 1.95, 1.95),
mean = vec_mean_H0,
sigma = Sigma
)
FWER_3
#
FWER_4 <- pmvnorm(
lower = c(0, -Inf),
upper = c(2.87, 0),
mean = vec_mean_H0[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, -Inf, -Inf, -Inf),
upper = c(2.87, 0, 1.95, 1.95),
mean = vec_mean_H0,
sigma = Sigma
)
FWER_4
#
FWER <- FWER_1 + FWER_2 + FWER_3 + FWER_4
FWER
#
#
############ Section 7.3 -------- Power calculation ############################
#
### Disjunctive power
# mean vector under global alternative hypothesis
vec_mean_dis <- c(2, 2, 2*sqrt(2), 2*sqrt(2))
## Power at stage 1
dis_power_1 <- 1 - pmvnorm(
upper = c(2.87, 2.87),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
)
#
## Power at stage 2
dis_power_2 <- pmvnorm(
lower = c(0, 0),
upper = c(2.87, 2.87),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, 0, -Inf, -Inf),
upper = c(2.87, 2.87, 1.95, 1.95),
mean = vec_mean_dis,
sigma = Sigma
)
#
#
############ Section 7.3 -------- Power calculation ############################
#
### Disjunctive power
# mean vector under global alternative hypothesis
vec_mean_dis <- c(2, 2, 2*sqrt(2), 2*sqrt(2))
## Power at stage 1
dis_power_1 <- 1 - pmvnorm(
upper = c(2.87, 2.87),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
)
#
## Power at stage 2
dis_power_2 <- pmvnorm(
lower = c(0, 0),
upper = c(2.87, 2.87),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, 0, -Inf, -Inf),
upper = c(2.87, 2.87, 1.95, 1.95),
mean = vec_mean_dis,
sigma = Sigma
)
#
dis_power_3 <- pmvnorm(
lower = c(-Inf, 0),
upper = c(0, 2.87),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(-Inf, 0, -Inf, -Inf),
upper = c(0, 2.87, 1.95, 1.95),
mean = vec_mean_dis,
sigma = Sigma)
#
dis_power_4 <- pmvnorm(
lower = c(0, -Inf),
upper = c(2.87, 0),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, -Inf, -Inf, -Inf),
upper = c(2.87, 0, 1.95, 1.95),
mean = vec_mean_dis,
sigma = Sigma
)
#
## Disjunctive power
dis_power <- dis_power_1 + dis_power_2 + dis_power_3 + dis_power_4
dis_power
#
#
#
#
### LFC power
# mean vector under global alternative hypothesis
vec_mean_LFC <- c(2, 0, 2*sqrt(2), 0)
## Power at stage 1
LFC_power_1 <- 1 - pmvnorm(
upper = c(2.87, 2.87),
mean = vec_mean_LFC[1:2],
sigma = Sigma[1:2, 1:2]
)
#
## Power at stage 2
LFC_power_2 <- pmvnorm(
lower = c(0, 0),
upper = c(2.87, 2.87),
mean = vec_mean_LFC[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, 0, -Inf, -Inf),
upper = c(2.87, 2.87, 1.95, 1.95),
mean = vec_mean_LFC,
sigma = Sigma
)
#
#
#
#
### LFC power
# mean vector under global alternative hypothesis
vec_mean_LFC <- c(2, 0, 2*sqrt(2), 0)
## Power at stage 1
LFC_power_1 <- 1 - pmvnorm(
upper = c(2.87, 2.87),
mean = vec_mean_LFC[1:2],
sigma = Sigma[1:2, 1:2]
)
#
## Power at stage 2
LFC_power_2 <- pmvnorm(
lower = c(0, 0),
upper = c(2.87, 2.87),
mean = vec_mean_LFC[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, 0, -Inf, -Inf),
upper = c(2.87, 2.87, 1.95, 1.95),
mean = vec_mean_LFC,
sigma = Sigma
)
#
LFC_power_3 <- pmvnorm(
lower = c(-Inf, 0),
upper = c(0, 2.87),
mean = vec_mean_LFC[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(-Inf, 0, -Inf, -Inf),
upper = c(0, 2.87, 1.95, 1.95),
mean = vec_mean_LFC,
sigma = Sigma
)
#
LFC_power_4 <- pmvnorm(
lower = c(0, -Inf),
upper = c(2.87, 0),
mean = vec_mean_LFC[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, -Inf, -Inf, -Inf),
upper = c(2.87, 0, 1.95, 1.95),
mean = vec_mean_LFC,
sigma = Sigma
)
#
## Disjunctive power
LFC_power <- LFC_power_1 + LFC_power_2+ LFC_power_3 + LFC_power_4
LFC_power
LFC_power_3
LFC_power_4
################################################################################
#FWER, Power, andOther operating characteristics in standard two-arm group sequential trial ##
############# For calculation in Section 6.2, 7.3, and 8 of thesis #############
#
#### package loading
library(mvtnorm)
#
#### global variable
## W_arm1_stage1, W_arm2_stage1, W_arm1_stage2, W_arm2_stage2
# covariance matrix
Sigma <- matrix(c(
1, 0.5, 1/sqrt(2), 1/(2*sqrt(2)),
0.5, 1, 1/(2*sqrt(2)), 1/sqrt(2),
1/sqrt(2), 1/(2*sqrt(2)), 1, 0.5,
1/(2*sqrt(2)), 1/sqrt(2), 0.5, 1
), nrow = 4, byrow = TRUE)
#
#
################## Section 6.2 ----- FWER calculation ##########################
# mean vector under null hypothesis
vec_mean_H0 <- c(rep(0, 4))
#
FWER_3 <- pmvnorm(
lower = c(-Inf, 0),
upper = c(0, 2.87),
mean = vec_mean_H0[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(-Inf, 0, -Inf, -Inf),
upper = c(0, 2.87, 1.95, 1.95),
mean = vec_mean_H0,
sigma = Sigma
)
FWER_3
#
FWER_4 <- pmvnorm(
lower = c(0, -Inf),
upper = c(2.87, 0),
mean = vec_mean_H0[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, -Inf, -Inf, -Inf),
upper = c(2.87, 0, 1.95, 1.95),
mean = vec_mean_H0,
sigma = Sigma
)
FWER_4
#
FWER <- FWER_1 + FWER_2 + FWER_3 + FWER_4
FWER
#
#
############ Section 7.3 -------- Power calculation ############################
#
### Disjunctive power
# mean vector under global alternative hypothesis
vec_mean_dis <- c(2, 2, 2*sqrt(2), 2*sqrt(2))
## Power at stage 1
dis_power_1 <- 1 - pmvnorm(
upper = c(2.87, 2.87),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
)
#
## Power at stage 2
dis_power_2 <- pmvnorm(
lower = c(0, 0),
upper = c(2.87, 2.87),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, 0, -Inf, -Inf),
upper = c(2.87, 2.87, 1.95, 1.95),
mean = vec_mean_dis,
sigma = Sigma
)
#
dis_power_3 <- pmvnorm(
lower = c(-Inf, 0),
upper = c(0, 2.87),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(-Inf, 0, -Inf, -Inf),
upper = c(0, 2.87, 1.95, 1.95),
mean = vec_mean_dis,
sigma = Sigma
)
#
dis_power_4 <- pmvnorm(
lower = c(0, -Inf),
upper = c(2.87, 0),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, -Inf, -Inf, -Inf),
upper = c(2.87, 0, 1.95, 1.95),
mean = vec_mean_dis,
sigma = Sigma
)
dis_power_3
#
dis_power_4 <- pmvnorm(
lower = c(0, -Inf),
upper = c(2.87, 0),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, -Inf, -Inf, -Inf),
upper = c(2.87, 0, 1.95, 1.95),
mean = vec_mean_dis,
sigma = Sigma
)
dis_power_4
#
## Disjunctive power
dis_power <- dis_power_1 + dis_power_2 + dis_power_3 + dis_power_4
dis_power
#
#
#
#
### LFC power
# mean vector under global alternative hypothesis
vec_mean_LFC <- c(2, 0, 2*sqrt(2), 0)
## Power at stage 1
LFC_power_1 <- 1 - pmvnorm(
upper = c(2.87, 2.87),
mean = vec_mean_LFC[1:2],
sigma = Sigma[1:2, 1:2]
)
#
## Power at stage 2
LFC_power_2 <- pmvnorm(
lower = c(0, 0),
upper = c(2.87, 2.87),
mean = vec_mean_LFC[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, 0, -Inf, -Inf),
upper = c(2.87, 2.87, 1.95, 1.95),
mean = vec_mean_LFC,
sigma = Sigma
)
#
LFC_power_3 <- pmvnorm(
lower = c(-Inf, 0),
upper = c(0, 2.87),
mean = vec_mean_LFC[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(-Inf, 0, -Inf, -Inf),
upper = c(0, 2.87, 1.95, 1.95),
mean = vec_mean_LFC,
sigma = Sigma
)
#
LFC_power_4 <- pmvnorm(
lower = c(0, -Inf),
upper = c(2.87, 0),
mean = vec_mean_LFC[1:2],
sigma = Sigma[1:2, 1:2]
) - pmvnorm(
lower = c(0, -Inf, -Inf, -Inf),
upper = c(2.87, 0, 1.95, 1.95),
mean = vec_mean_LFC,
sigma = Sigma
)
LFC_power_3
LFC_power_4
#
## Disjunctive power
LFC_power <- LFC_power_1 + LFC_power_2+ LFC_power_3 + LFC_power_4
LFC_power
#
#
#
############## Section 8 --------- Other operating characteristics #############
#
#
#### Section 8.1
## The probability of both arms being recommended if both are genuinely effective - p1
# mean vector under global alternative hypothesis
vec_mean_dis <- c(2, 2, 2*sqrt(2), 2*sqrt(2))
#
# Term 1: P(W_{01}^1 > 2.87, W_{02}^1 > 2.87)
p1.term1 <- pmvnorm(
lower = c(2.87, 2.87),
upper = rep(Inf, 2),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
)
p1.term1
#
# Term 1: P(W_{01}^1 > 2.87, W_{02}^1 > 2.87)
p1.term1 <- pmvnorm(
lower = c(2.87, 2.87),
upper = rep(Inf, Inf),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
)
#
# Term 1: P(W_{01}^1 > 2.87, W_{02}^1 > 2.87)
p1.term1 <- pmvnorm(
lower = c(2.87, 2.87),
upper = rep(Inf, 2),
mean = vec_mean_dis[1:2],
sigma = Sigma[1:2, 1:2]
)
# Term 2: P(0 ≤ W_{01}^1 ≤ 2.87, 0 ≤ W_{02}^1 ≤ 2.87, W_{01}^2 > 1.95, W_{02}^2 > 1.95)
p1.term2 <- pmvnorm(
lower = c(0, 0, 1.95, 1.95),
upper = c(2.87, 2.87, Inf, Inf),
mean = vec_mean_dis,
sigma = Sigma
)
# p1
p1 <- p1.term1 + p1.term2
p1
setwd("E:/Msc Epi/Master thesis/Msc_thesis")
source("FUNCTIONS.R")
source("FUNCTIONS.R")
#
#
lambda.all=c(0.04, 0.06, 0.06),  # c(treatment1, treatment2, control)
#
#
lambda.all <- c(0.04, 0.06, 0.06),  # c(treatment1, treatment2, control)
#
#
lambda.all <- c(0.04, 0.06, 0.06)  # c(treatment1, treatment2, control)
p.all <- c(0.4, 0.2, 0.2)               # c(treatment1, treatment2, control)
#
##### MJW
#
N_MJW <- 344
#
### Endpoints
#
# endpoint component A
lambda1 = lambda.all[1]
lambda2 = lambda.all[2]
lambda0 = lambda.all[3]
# endpoint component B
p1 = p.all[1]
p2 = p.all[2]
p0 = p.all[3]
#
### Data generating
# stage 1
dat1_stage1<-dat_gen_multi(nn=N_MJW/6, lambda=lambda1, p=p1, arm=1) # arm1 (treatment1)
dat2_stage1<-dat_gen_multi(nn=N_MJW/6, lambda=lambda2, p=p2, arm=2) # arm2 (treatment2)
dat0_stage1<-dat_gen_multi(nn=N_MJW/6, lambda=lambda0, p=p0, arm=0) # control arm
344/6
# stage 2
dat1_stage2 <- rbind(dat1_stage1,
dat_gen_multi(N_MJW/6, lambda=lambda1, p=p1, arm=1))
dat2_stage2 <- rbind(dat2_stage1,
dat_gen_multi(N_MJW/6, lambda=lambda2, p=p2, arm=2))
dat0_stage2 <- rbind(dat0_stage1,
dat_gen_multi(N_MJW/6, lambda=lambda0, p=p0, arm=0))
#
### Test statistics W01_1, W02_1, W01_2, W02_2
W01_1<-Wij_cal_multi(dat0_stage1,dat1_stage1)
W02_1<-Wij_cal_multi(dat0_stage1,dat2_stage1)
W01_2<-Wij_cal_multi(dat0_stage2,dat1_stage2)
W02_2<-Wij_cal_multi(dat0_stage2,dat2_stage2)
dat1_stage1
dat2_stage1
#
### Data generating
# stage 1
dat1_stage1<-dat_gen_multi(nn=N_MJW/6, lambda=lambda1, p=p1, arm=1) # arm1 (treatment1)
dat2_stage1<-dat_gen_multi(nn=N_MJW/6, lambda=lambda2, p=p2, arm=2) # arm2 (treatment2)
dat0_stage1<-dat_gen_multi(nn=N_MJW/6, lambda=lambda0, p=p0, arm=0) # control arm
# stage 2
dat1_stage2 <- rbind(dat1_stage1,
dat_gen_multi(N_MJW/6, lambda=lambda1, p=p1, arm=1))
dat2_stage2 <- rbind(dat2_stage1,
dat_gen_multi(N_MJW/6, lambda=lambda2, p=p2, arm=2))
dat0_stage2 <- rbind(dat0_stage1,
dat_gen_multi(N_MJW/6, lambda=lambda0, p=p0, arm=0))
#
### Test statistics W01_1, W02_1, W01_2, W02_2
W01_1<-Wij_cal_multi(dat0_stage1,dat1_stage1)
W02_1<-Wij_cal_multi(dat0_stage1,dat2_stage1)
W01_2<-Wij_cal_multi(dat0_stage2,dat1_stage2)
W02_2<-Wij_cal_multi(dat0_stage2,dat2_stage2)
